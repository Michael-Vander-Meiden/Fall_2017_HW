import argparse
import sys

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--n_labels', type=int, default=23, help='Number of different labels')
    parser.add_argument('--output_file', type=str, default="output.txt", help='File generated by label propagation')
    parser.add_argument('--gold_file', type=str, default="gold1_2.txt", help='File that contains gold label')
    args = parser.parse_args()

    fin  = open(args.output_file, 'r')
    node_ranks = {}
    for line in fin.readlines():
        tmp = line.strip().split('\t')
        # tmp[0]: node
        # tmp[1:]: the rank for all labels
        if len(tmp) <= 1:
            raise Exception("OutputFormatError", "output.txt must the the format: node\tlabel1\tlabel2 ...")
        node_ranks[tmp[0]] = tmp[1:]

    fin.close()
    
    MRR = []
    fin = open(args.gold_file, 'r')
    for line in fin.readlines():
        node, gold = line.strip().split('\t')
        rank = args.n_labels
        if not node in node_ranks:
            raise Exception("OutputFormatError", "node %s is not in output.txt"%node)
        for i, label in enumerate(node_ranks[node]):
            if label == gold:
                rank = i + 1
                break
        MRR.append(1.0 / rank)
    fin.close()
    print("MRR=%f"%(sum(MRR)/len(MRR)))